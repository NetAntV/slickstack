#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: littlebizzy/slickstack/blob/master/bash/ss-install-ubuntu-kernel.txt ##################
#### path: /var/www/ss-install-ubuntu-kernel #######################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Reinstalls the Ubuntu Linux kernel for SlickStack servers (idempotent) ###############
#### module version: Ubuntu 24.04 LTS ##############################################################
#### sourced by: ss-install ########################################################################
#### bash aliases: ss install kernel, ss install ubuntu kernel #####################################
####################################################################################################

## SS-CONFIG MUST BE PROPERLY CONFIGURED AND ON CURRENT BUILD BEFORE RUNNING SS-INSTALL ##
## ENSURE YOUR SS-CONFIG BUILD REMAINS CURRENT BY RUNNING SS-UPDATE OCCASIONALLY ##

####################################################################################################
#### TABLE OF CONTENTS (SS-Install-Ubuntu-Kernel) ##################################################
####################################################################################################

## this is a brief summary of the different code snippets you will find in this script ##
## each section should be commented so you understand what is being accomplished ##

## A. Source SS-Config + SS-Functions
## B. Touch Timestamp File
## C. Message (Begin Script)
## D. Install Ubuntu Linux Kernel
## E. Reset Permissions (Ubuntu Kernel)
## F. Reload Ubuntu Kernel

####################################################################################################
#### A. SS-Install-Ubuntu-Kernel: Source SS-Config + SS-Functions ##################################
####################################################################################################

## before anything else we must source the critical variables that power this script ##
## ss-config is setup during ss-install wizard but ss-functions is hardcoded ##

## source ss-config ##
source /var/www/ss-config

## source ss-functions ##
source /var/www/ss-functions

## BELOW THIS RELIES ON SS-CONFIG AND SS-FUNCTIONS

####################################################################################################
#### B. SS-Install-Ubuntu-Kernel: Touch Timestamp File #############################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

ss_touch "${TIMESTAMP_SS_INSTALL_UBUNTU_KERNEL}"

####################################################################################################
#### C. SS-Install-Ubuntu-Kernel: Message (Begin Script) ###########################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be seen by sudo users who manually run this script in the shell ##

ss_echo "${COLOR_INFO}Running ss-install-ubuntu-kernel... ${COLOR_RESET}"

####################################################################################################
#### D. SS-Install-Ubuntu-Kernel: Install Ubuntu Linux Kernel ######################################
####################################################################################################

## backup current kernel file ##
ss_cp "${PATH_SYSCTL_CONF}" /etc/sysctl.conf.bak

## download kernel boilerplate ##
if [[ "${SYSTEM_UBUNTU_VERSION}" == "24.04" ]]; then
    ss_wget "${TMP_SYSCTL_CONF}" "${GITHUB_SYSCTL_CONF_2404}"
elif [[ "${SYSTEM_UBUNTU_VERSION}" == "22.04" ]]; then
    ss_wget "${TMP_SYSCTL_CONF}" "${GITHUB_SYSCTL_CONF_2204}"
elif [[ "${SYSTEM_UBUNTU_VERSION}" == "20.04" ]]; then
    ss_wget "${TMP_SYSCTL_CONF}" "${GITHUB_SYSCTL_CONF_2004}"
elif [[ "${SYSTEM_UBUNTU_VERSION}" == "18.04" ]]; then
    ss_wget "${TMP_SYSCTL_CONF}" "${GITHUB_SYSCTL_CONF_1804}"
fi

## check if ipv6 connection is active ##
if [[ -n "${SYSTEM_DIG_IPV6_ADDRESS}" ]]; then
    ss_sed "s|net.ipv6.conf.all.disable_ipv6 = 1|net.ipv6.conf.all.disable_ipv6 = 0|g" "${PATH_SYSCTL_CONF}"

    ss_sed "s|^# net.ipv6.conf.all.rp_filter.*|net.ipv6.conf.all.rp_filter = 1|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.conf.all.forwarding.*|net.ipv6.conf.all.forwarding = 0|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.conf.all.accept_redirects.*|net.ipv6.conf.all.accept_redirects = 0|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.conf.all.accept_source_route.*|net.ipv6.conf.all.accept_source_route = 0|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.ip_local_port_range.*|net.ipv6.ip_local_port_range = 1024 65535|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.tcp_max_syn_backlog.*|net.ipv6.tcp_max_syn_backlog = 2048|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.tcp_rmem.*|net.ipv6.tcp_rmem = 4096 87380 16777216|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.tcp_wmem.*|net.ipv6.tcp_wmem = 4096 65536 16777216|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.tcp_timestamps.*|net.ipv6.tcp_timestamps = 1|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.tcp_keepalive_time.*|net.ipv6.tcp_keepalive_time = 7200|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.tcp_keepalive_intvl.*|net.ipv6.tcp_keepalive_intvl = 75|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.tcp_keepalive_probes.*|net.ipv6.tcp_keepalive_probes = 9|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.tcp_fastopen.*|net.ipv6.tcp_fastopen = 3|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.conf.lo.forwarding.*|net.ipv6.conf.lo.forwarding = 0|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.tcp_sack.*|net.ipv6.tcp_sack = 1|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.tcp_max_orphans.*|net.ipv6.tcp_max_orphans = 32768|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.tcp_mem.*|net.ipv6.tcp_mem = 786432 16777216 33554432|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.conf.all.use_tempaddr.*|net.ipv6.conf.all.use_tempaddr = 0|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.conf.default.use_tempaddr.*|net.ipv6.conf.default.use_tempaddr = 0|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.conf.all.accept_ra.*|net.ipv6.conf.all.accept_ra = 0|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.conf.default.accept_ra.*|net.ipv6.conf.default.accept_ra = 0|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.conf.all.dad_transmits.*|net.ipv6.conf.all.dad_transmits = 0|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.conf.default.dad_transmits.*|net.ipv6.conf.default.dad_transmits = 0|g" "${PATH_SYSCTL_CONF}"
    ss_sed "s|^# net.ipv6.conf.all.rfc4941.*|net.ipv6.conf.all.rfc4941 = 0|g" "${PATH_SYSCTL_CONF}"

    ss_echo "Message ss-install-ubuntu-kernel: IPv6 detected, enabling IPv6 in the kernel settings."
else

    ss_echo "Message ss-install-ubuntu-kernel: IPv6 appears inactive, keeping IPv6 disabled in the kernel settings."
fi

## copy files to their destinations ##
ss_cp "${TMP_SYSCTL_CONF}" "${PATH_SYSCTL_CONF}"

####################################################################################################
#### E. SS-Install-Ubuntu-Kernel: Reset Permissions (Ubuntu Kernel) ################################
####################################################################################################

source "${PATH_SS_PERMS_UBUNTU_KERNEL}"

####################################################################################################
#### F. SS-Install-Ubuntu-Kernel: Reload Ubuntu Kernel #############################################
####################################################################################################

sysctl -p "${PATH_SYSCTL_CONF}" > /dev/null

####################################################################################################
#### SlickStack: Reset Permissions (SlickStack Scripts) ############################################
####################################################################################################

## we include this permissions reset in all cron jobs and bash scripts for redundancy ##
## chmod 0700 means only the root/sudo users can execute any SlickStack scripts ##

## THIS SNIPPET DOES NOT RELY ON SS-CONFIG OR SS-FUNCTIONS
## SNIPPET: ss bash scripts, ss cron jobs
## UPDATED: 02JUL2022

chown root:root /var/www/ss* ## must be root:root
chown root:root /var/www/crons/*cron* ## must be root:root
chown root:root /var/www/crons/custom/*cron* ## must be root:root
chmod 0700 /var/www/ss* ## 0700 means only root/sudo can execute
chmod 0700 /var/www/crons/*cron* ## 0700 means only root/sudo can execute
chmod 0700 /var/www/crons/custom/*cron* ## 0700 means only root/sudo can execute

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: ChatGPT

## SS_EOF
